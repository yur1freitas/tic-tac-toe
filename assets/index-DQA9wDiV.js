(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();/**
 * @license lucide v0.542.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const A={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"};/**
 * @license lucide v0.542.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const L=([n,e,t])=>{const s=document.createElementNS("http://www.w3.org/2000/svg",n);return Object.keys(e).forEach(r=>{s.setAttribute(r,String(e[r]))}),t?.length&&t.forEach(r=>{const i=L(r);s.appendChild(i)}),s},v=(n,e={})=>{const s={...A,...e};return L(["svg",s,n])};/**
 * @license lucide v0.542.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const I=n=>Array.from(n.attributes).reduce((e,t)=>(e[t.name]=t.value,e),{}),N=n=>typeof n=="string"?n:!n||!n.class?"":n.class&&typeof n.class=="string"?n.class.split(" "):n.class&&Array.isArray(n.class)?n.class:"",O=n=>n.flatMap(N).map(t=>t.trim()).filter(Boolean).filter((t,s,r)=>r.indexOf(t)===s).join(" "),T=n=>n.replace(/(\w)(\w*)(_|-|\s*)/g,(e,t,s)=>t.toUpperCase()+s.toLowerCase()),P=(n,{nameAttr:e,icons:t,attrs:s})=>{const r=n.getAttribute(e);if(r==null)return;const i=T(r),o=t[i];if(!o)return console.warn(`${n.outerHTML} icon name was not found in the provided icons object.`);const c=I(n),h={...A,"data-lucide":r,...s,...c},d=O(["lucide",`lucide-${r}`,c,s]);d&&Object.assign(h,{class:d});const f=v(o,h);return n.parentNode?.replaceChild(f,n)};/**
 * @license lucide v0.542.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const F=[["path",{d:"M11 9a1 1 0 0 0 1-1V5.061a1 1 0 0 1 1.811-.75l6.836 6.836a1.207 1.207 0 0 1 0 1.707l-6.836 6.835a1 1 0 0 1-1.811-.75V16a1 1 0 0 0-1-1H5a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1z"}]];/**
 * @license lucide v0.542.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const _=[["circle",{cx:"12",cy:"12",r:"10"}]];/**
 * @license lucide v0.542.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const z=[["path",{d:"m12 14 4-4"}],["path",{d:"M3.34 19a10 10 0 1 1 17.32 0"}]];/**
 * @license lucide v0.542.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const q=[["path",{d:"M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"}],["path",{d:"M3 3v5h5"}],["path",{d:"M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16"}],["path",{d:"M16 16h5v5"}]];/**
 * @license lucide v0.542.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const W=[["path",{d:"M18 6 6 18"}],["path",{d:"m6 6 12 12"}]];/**
 * @license lucide v0.542.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const j=({icons:n={},nameAttr:e="data-lucide",attrs:t={},root:s=document}={})=>{if(!Object.values(n).length)throw new Error(`Please provide an icons object.
If you want to use all the icons you can import it like:
 \`import { createIcons, icons } from 'lucide';
lucide.createIcons({icons});\``);if(typeof s>"u")throw new Error("`createIcons()` only works in a browser environment.");const r=s.querySelectorAll(`[${e}]`);if(Array.from(r).forEach(i=>P(i,{nameAttr:e,icons:n,attrs:t})),e==="data-lucide"){const i=s.querySelectorAll("[icon-name]");i.length>0&&(console.warn("[Lucide] Some icons were found with the now deprecated icon-name attribute. These will still be replaced for backwards compatibility, but will no longer be supported in v1.0 and you should switch to data-lucide"),Array.from(i).forEach(o=>P(o,{nameAttr:"icon-name",icons:n,attrs:t})))}};j({icons:{Gauge:z,RefreshCcw:q,ArrowBigRight:F}});class D extends Error{constructor(e){super(e)}}class C{get props(){throw new D("O método getter 'props' não foi definida")}clone(e){return new this.constructor({...this.props,...e})}}class M extends C{#e;#t;#r;#s;constructor({type:e,name:t,score:s=0,isAI:r=!1}){super(),this.#e=e,this.#t=t,this.#r=s,this.#s=r}get type(){return this.#e}get name(){return this.#t}get score(){return this.#r}get isAI(){return this.#s}get props(){return{type:this.#e,name:this.#t,isAI:this.#s,score:this.#r}}addScore(e){return e===0?this:this.clone({score:this.#r+e})}reset(){return this.clone({score:0})}}class l extends C{#e;#t;#r;static Cross=2;static Circle=1;static Empty=0;constructor({row:e,col:t,type:s=l.Empty}){super(),this.#e=s,this.#t=e,this.#r=t}get type(){return this.#e}get row(){return this.#t}get col(){return this.#r}get props(){return{type:this.#e,row:this.#t,col:this.#r}}get isMarked(){return this.#e!==l.Empty}get isEmpty(){return this.#e===l.Empty}mark(e){return this.#e!==l.Empty?this:this.clone({type:e})}}class u{#e;#t;constructor({moves:e=[],isTie:t=!1}={}){this.#e=e,this.#t=t}get moves(){return this.#e}get isCrossWinner(){return this.#e[0]?.type===l.Cross}get isCircleWinner(){return this.#e[0]?.type===l.Circle}get isTie(){return!this.isCrossWinner&&!this.isCircleWinner&&this.#t}get inProgress(){return this.#e.length===0&&!this.#t}get isFinished(){return!this.inProgress}isWinner(e){return this.#e[0]?.type===e.type&&this.isFinished}hasCell(e,t){return!!this.#e.find(r=>r.row===e&&r.col===t)}}class p{#e;constructor(e){this.#e=e}get size(){return this.#e.length}data(){return this._copy()}_copy(){return this.#e.map(e=>[...e])}values(){return this.#e.flat()}rows(){return this.#e.map(e=>[...e])}cols(){return this.#e.map((e,t)=>e.map((s,r)=>this.#e[r][t]))}diagonals(){const e=this.#e.map((s,r)=>this.#e[r][r]),t=this.#e.map((s,r)=>this.#e[r][this.size-1-r]);return[e,t]}get(e,t){return e<0||t<0||e>=this.size||t>=this.size?null:this.#e[e][t]}set(e,t,s){if(e<0||t<0||e>=this.size||t>=this.size)return this;const r=this._copy();return r[e][t]=s,new p(r)}static create(e,t){const s=Array.from({length:e},(r,i)=>Array.from({length:e},(o,c)=>t(i,c)));return new p(s)}}class y{#e;constructor(e){this.#e=e}get grid(){return this.#e}get size(){return this.#e.size}get cells(){return this.#e.values()}get isFull(){return this.cells.every(e=>e.isMarked)}get isEmpty(){return this.cells.every(e=>e.isEmpty)}getCell(e,t){return this.#e.get(e,t)}markCell({type:e,row:t,col:s}){const r=this.#e.get(t,s);if(r===null||r.isMarked)return this;const i=this.#e.set(t,s,r.mark(e));return new y(i)}isMarkedCell(e,t){return!!this.#e.get(e,t)?.isMarked}isEmptyCell(e,t){return!!this.#e.get(e,t)?.isEmpty}static create(e=3){const t=p.create(e,(s,r)=>new l({row:s,col:r}));return new y(t)}}class k{#e;constructor(e){this.#e=e}verifyResult(){const e=this.#e.map(r=>r.type),t=e[0];return e.every(r=>r!==l.Empty&&r===t)?new u({moves:this.#e}):new u}}class ${verifyBoard(e){for(const t of e.grid.rows()){const r=new k(t).verifyResult();if(r.isFinished)return r}return new u}}class G{verifyBoard(e){for(const t of e.grid.cols()){const r=new k(t).verifyResult();if(r.isFinished)return r}return new u}}class H{verifyBoard(e){for(const t of e.grid.diagonals()){const r=new k(t).verifyResult();if(r.isFinished)return r}return new u}}class V{verifyBoard(e){return e.isFull?new u({moves:[],isTie:!0}):new u}}class E extends C{#e;#t;#r;#s;#n;#i;#o;constructor({tie:e=0,board:t=y.create(),result:s=new u,player1:r,player2:i,firstPlayer:o,currentPlayer:c}){super(),this.#n=e,this.#i=t,this.#o=s,this.#e=r,this.#t=i,this.#r=o,this.#s=c}get player1(){return this.#e}get player2(){return this.#t}get firstPlayer(){return this.#r}get currentPlayer(){return this.#s}get tie(){return this.#n}get board(){return this.#i}get result(){return this.#o}get props(){return{tie:this.#n,board:this.#i,result:this.#o,player1:this.#e,player2:this.#t,firstPlayer:this.#r,currentPlayer:this.#s}}mark(e,t){if(this.board.isMarkedCell(e,t)||this.result.isFinished)return this;const s=this.board.markCell({type:this.currentPlayer.type,row:e,col:t}),r=this.#a(s),{player1:i,player2:o,tie:c}=this.#l(r);return this.clone({player1:i,player2:o,result:r,board:s,tie:c}).#c()}nextRound(){const e=this.#r.type===this.#e.type?this.#t:this.#e,t=y.create(),s=new u;return this.clone({currentPlayer:e,firstPlayer:e,result:s,board:t})}reset(){const e=this.#e.reset(),t=this.#t.reset(),s=this.#r.type===this.#e.type?t:e,r=0,i=y.create(),o=new u;return this.clone({currentPlayer:s,firstPlayer:s,player1:e,player2:t,result:o,board:i,tie:r})}#c(){if(!this.result.inProgress)return this;const e=this.#s.type===this.#e.type?this.#t:this.#e;return this.clone({currentPlayer:e})}#l(e){const{player1:t,player2:s,tie:r}=this;return e.isWinner(this.player1)?{tie:r,player2:s,player1:t.addScore(1)}:e.isWinner(this.player2)?{tie:r,player1:t,player2:s.addScore(1)}:e.isTie?{player1:t,player2:s,tie:r+1}:{player1:t,player2:s,tie:r}}#a(e){const t=new G().verifyBoard(e),s=new $().verifyBoard(e),r=new H().verifyBoard(e);return[t,s,r].find(o=>o.isFinished)??new V().verifyBoard(e)}static create(e,t){return new E({currentPlayer:e,firstPlayer:e,player1:e,player2:t})}}function S(n,e){return Math.floor(Math.random()*(e-n+1)+n)}const w={easy:.75,normal:.5,medium:.25,hard:0};class a{_difficulty;constructor(e="normal"){this._difficulty=e}get difficulty(){return this._difficulty}mark(e){const[t,s]=a.#e(e,this._difficulty);return e.mark(t,s)}static#e(e,t){if(e.board.isEmpty)return a.#t(e);const s=Object.prototype.hasOwnProperty.call(w,t)?w[t]:w.normal;return Math.random()>s?a.#r(e):a.#t(e)}static#t(e){const t=S(0,e.board.size-1),s=S(0,e.board.size-1),r=e.board.getCell(t,s);return r===null||r.isMarked?a.#t(e):[t,s]}static#r(e){let t=-1/0,s=[-1,-1];for(const r of e.board.cells)if(r.isEmpty){const i=e.mark(r.row,r.col),o=a.#s(i);o>t&&(t=o,s=[r.row,r.col])}return s}static#s(e,t=1/0,s=-1/0,r=0){const[i,o]=e.player1.isAI?[e.player2,e.player1]:[e.player1,e.player2];if(e.result.isWinner(i))return-10+r;if(e.result.isWinner(o))return 10+r;if(e.result.isTie)return 0;if(e.currentPlayer.isAI){for(const c of e.board.cells)if(c.isEmpty){const h=e.mark(c.row,c.col),d=a.#s(h,t,s,r+1);if(s=Math.max(s,d),t<=s)break}return s}else{for(const c of e.board.cells)if(c.isEmpty){const h=e.mark(c.row,c.col),d=a.#s(h,t,s,r+1);if(t=Math.min(t,d),t<=s)break}return t}}}function J(n){const e=document.createElement("div");if(e.classList.add("markup"),n===l.Cross){const t=v(W);e.appendChild(t)}if(n===l.Circle){const t=v(_);e.appendChild(t)}return e}function K(n){const e=document.createElement("div");e.classList.add("cell"),n.isMarked&&e.classList.add(n.type===l.Cross?"cell--player-1":"cell--player-2");const t=J(n.type);return e.appendChild(t),e}function U(){const n=new M({type:l.Cross,name:"Jogador 1"}),e=new M({type:l.Circle,name:"Jogador 2",isAI:!0});let t=new a,s=E.create(n,e);const r=document.querySelector(".game__board"),i=document.querySelector(".score--tie > .score__value"),o=document.querySelector(".score--player-1 > .score__value"),c=document.querySelector(".score--player-2 > .score__value"),h=()=>{r.innerHTML=""},d=()=>{i.textContent=`${s.tie}`,o.textContent=`${s.player1.score}`,c.textContent=`${s.player2.score}`},f=()=>{h(),d();const{cells:m}=s.board;for(const g of m){const b=K(g);b.addEventListener("click",()=>{s=s.mark(g.row,g.col),s.currentPlayer.isAI&&(s=t.mark(s)),s.result.isFinished&&d(),f()}),r.appendChild(b)}};return{render:f,nextRound:()=>{s=s.nextRound(),s.currentPlayer.isAI&&(s=t.mark(s)),f()},resetGame:()=>{s=s.reset(),s.currentPlayer.isAI&&(s=t.mark(s)),f()},changeDifficulty:m=>{t=new a(m)}}}const{render:X,nextRound:x,resetGame:Q,changeDifficulty:R}=U(),Y=document.querySelector(".game__reset-btn");Y.addEventListener("click",Q);const Z=document.querySelector(".game__next-round-btn");Z.addEventListener("click",x);const B=document.getElementById("difficulty");window.addEventListener("DOMContentLoaded",()=>{R(B.value)});B.addEventListener("change",n=>{R(n.currentTarget.value),x()});X();
